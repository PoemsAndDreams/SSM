<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    /**
    * 1、实例化
    * 2、依赖注入
    * 3、后置处理器的postProcessBeforeInitialization
    * 4、初始化，需要通过bean的init-method属性指定初始化的方法
    * 5、后置处理器的postProcessAfterInitialization
    * 6、IOC容器关闭时销毁，需要通过bean的destroy-method属性指定销毁的方法
    *
    * bean的后置处理器会在生命周期的初始化前后添加额外的操作
    * 需要实现BeanPostProcessor接口且配置到IOC容器中
    * 需要注意的是，bean后置处理器不是单独针对某一个bean生效，而是针对IOC容器中所有bean都会执行
    *
    * 注意：
    * 若bean的作用域为单例时，生命周期的前三个步骤会在获取IOC容器时执行
    * 若bean的作用域为多例时，生命周期的前三个步骤会在获取bean时执行
    */

    -->
    <bean id="User" class="com.yutian.spring.pojo.User" init-method="initMethod" destroy-method="destroyMethod">
        <property name="id" value="1"></property>
        <property name="username" value="admin"></property>
        <property name="password" value="123456"></property>
        <property name="age" value="23"></property>
    </bean>


    <bean id="myBeanPostProcessor" class="com.yutian.spring.process.MybeanPostProcessor"></bean>

</beans>