<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


        <!--扫描-->
    <context:component-scan base-package="com.yutian.spring"></context:component-scan>



        <!--
        web工程需要classpath:jdbc.properties
        java可不加-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>









    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--
    开启事务的注解驱动
    将使用@Transactional注解所标识的方法或类中所有的方法使用事务进行管理
    transaction-manager属性设置事务管理器的id
    若事务管理器的bean的id默认为transactionManager，则该属性可以不写
    灰色表示默认值



     /**
     * Date:2022/7/6
     * Author:ybc
     * Description:
     * 声明式事务的配置步骤：
     * 1、在Spring的配置文件中配置事务管理器
     * 2、开启事务的注解驱动
     * 在需要被事务管理的方法上，添加@Transactional注解，该方法就会被事务管理
     * @Transactional注解标识的位置：
     * 1、标识在方法上
     * 2、标识在类上，则类中所有的方法都会被事务管理
     */
    -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


</beans>